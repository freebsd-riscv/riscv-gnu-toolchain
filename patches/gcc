diff -N -r -u original-gcc/gcc/config/riscv/freebsd.h original-gcc2/gcc/config/riscv/freebsd.h
--- original-gcc/gcc/config/riscv/freebsd.h	1970-01-01 00:00:00.000000000 +0000
+++ original-gcc2/gcc/config/riscv/freebsd.h	2016-03-22 14:05:02.563342496 +0000
@@ -0,0 +1,57 @@
+/* Definitions for RISC-V FreeBSD systems with ELF format.
+   Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006,
+   2007, 2008, 2010, 2011 Free Software Foundation, Inc.
+
+This file is part of GCC.
+
+GCC is free software; you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation; either version 3, or (at your option)
+any later version.
+
+GCC is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with GCC; see the file COPYING3.  If not see
+<http://www.gnu.org/licenses/>.  */
+
+#undef WCHAR_TYPE
+#define WCHAR_TYPE "int"
+
+#undef WCHAR_TYPE_SIZE
+#define WCHAR_TYPE_SIZE 32
+
+#undef  SUBTARGET_EXTRA_SPECS   /* i386.h bogusly defines it.  */
+#define SUBTARGET_EXTRA_SPECS \
+  { "fbsd_dynamic_linker", FBSD_DYNAMIC_LINKER }
+
+/* Use the STARTFILE_SPEC from config/freebsd-spec.h.  */
+
+#undef  STARTFILE_SPEC
+#define STARTFILE_SPEC FBSD_STARTFILE_SPEC
+
+/* Use the ENDFILE_SPEC from config/freebsd-spec.h.  */
+
+#undef  ENDFILE_SPEC
+#define ENDFILE_SPEC FBSD_ENDFILE_SPEC
+
+/* Provide a LINK_SPEC appropriate for FreeBSD.  Here we provide support
+   for the special GCC options -static and -shared, which allow us to
+   link things in one of these three modes by applying the appropriate
+   combinations of options at link-time.
+
+   When the -shared link option is used a final link is not being
+   done.  */
+
+/* Borrowed from sparc/linux.h */
+#undef LINK_SPEC
+#define LINK_SPEC \
+  "%{shared:-shared} \
+  %{!shared: \
+    %{!static: \
+      %{rdynamic:-export-dynamic} \
+      -dynamic-linker " FBSD_DYNAMIC_LINKER "} \
+      %{static:-static}}"
diff -N -r -u original-gcc/gcc/config/riscv/freebsd64.h original-gcc2/gcc/config/riscv/freebsd64.h
--- original-gcc/gcc/config/riscv/freebsd64.h	1970-01-01 00:00:00.000000000 +0000
+++ original-gcc2/gcc/config/riscv/freebsd64.h	2016-03-22 14:05:02.564342859 +0000
@@ -0,0 +1,38 @@
+/* Definitions for 64-bit FreeBSD systems with ELF format.
+   Copyright 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2010, 2011
+   Free Software Foundation, Inc.
+
+This file is part of GCC.
+
+GCC is free software; you can redistribute it and/or modify
+it under the terms of the GNU General Public License as published by
+the Free Software Foundation; either version 3, or (at your option)
+any later version.
+
+GCC is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU General Public License for more details.
+
+You should have received a copy of the GNU General Public License
+along with GCC; see the file COPYING3.  If not see
+<http://www.gnu.org/licenses/>.  */
+
+
+#define SUBTARGET_EXTRA_SPECS \
+  { "fbsd_dynamic_linker", FBSD_DYNAMIC_LINKER }
+
+#undef CC1_SPEC
+#define CC1_SPEC "%(cc1_cpu) %{profile:-p}"
+
+#undef LINK_SPEC
+#define LINK_SPEC "\
+%{shared} \
+  %{!shared: \
+    %{!static: \
+      %{rdynamic:-export-dynamic} \
+      %{" OPT_ARCH64 ": -dynamic-linker " FBSD_DYNAMIC_LINKER "} \
+      %{" OPT_ARCH32 ": -dynamic-linker " FBSD_DYNAMIC_LINKER "}} \
+    %{static:-static}} \
+%{" OPT_ARCH64 ":-melf64lriscv} \
+%{" OPT_ARCH32 ":-melf32lriscv}"
diff -N -r -u original-gcc/gcc/config/riscv/t-freebsd64 original-gcc2/gcc/config/riscv/t-freebsd64
--- original-gcc/gcc/config/riscv/t-freebsd64	1970-01-01 00:00:00.000000000 +0000
+++ original-gcc2/gcc/config/riscv/t-freebsd64	2016-03-22 14:05:02.564342859 +0000
@@ -0,0 +1,5 @@
+# Build the libraries for both hard and soft floating point
+
+MULTILIB_OPTIONS = m64/m32 msoft-float mno-atomic
+MULTILIB_DIRNAMES = 64 32 soft-float no-atomic
+MULTILIB_OSDIRNAMES = ../lib ../lib32
diff -N -r -u original-gcc/gcc/config.gcc original-gcc2/gcc/config.gcc
--- original-gcc/gcc/config.gcc	2015-09-10 14:17:53.000000000 +0000
+++ original-gcc2/gcc/config.gcc	2016-03-22 14:02:06.465354474 +0000
@@ -439,6 +439,10 @@
 	esac
 	extra_options="${extra_options} g.opt fused-madd.opt rs6000/rs6000-tables.opt"
 	;;
+riscv*)
+	cpu_type=riscv
+	need_64bit_hwint=yes
+	;;
 rs6000*-*-*)
 	extra_options="${extra_options} g.opt fused-madd.opt rs6000/rs6000-tables.opt"
 	;;
@@ -1982,6 +1986,39 @@
 	cxx_target_objs="${cxx_target_objs} microblaze-c.o"
 	tmake_file="${tmake_file} microblaze/t-microblaze"
         ;;
+riscv32*-*-linux*)
+	tm_file="elfos.h gnu-user.h linux.h glibc-stdint.h riscv/default-32.h ${tm_file} riscv/linux.h riscv/linux64.h"
+	tmake_file="${tmake_file} riscv/t-linux64"
+	gnu_ld=yes
+	gas=yes
+	gcc_cv_initfini_array=yes
+	;;
+riscv*-*-linux*)
+	tm_file="elfos.h gnu-user.h linux.h glibc-stdint.h ${tm_file} riscv/linux.h riscv/linux64.h"
+	tmake_file="${tmake_file} riscv/t-linux64"
+	gnu_ld=yes
+	gas=yes
+	gcc_cv_initfini_array=yes
+	;;
+riscv*-*-freebsd*)
+	tm_file="${tm_file} dbxelf.h elfos.h ${fbsd_tm_file} riscv/freebsd.h riscv/freebsd64.h"
+	tmake_file="${tmake_file} riscv/t-freebsd64"
+	gcc_cv_initfini_array=yes
+	;;
+riscv32*-*-elf*)
+	tm_file="elfos.h newlib-stdint.h riscv/default-32.h ${tm_file} riscv/elf.h"
+	tmake_file="${tmake_file} riscv/t-elf"
+	gnu_ld=yes
+	gas=yes
+	gcc_cv_initfini_array=yes
+	;;
+riscv*-*-elf*)
+	tm_file="elfos.h newlib-stdint.h ${tm_file} riscv/elf.h"
+	tmake_file="${tmake_file} riscv/t-elf"
+	gnu_ld=yes
+	gas=yes
+	gcc_cv_initfini_array=yes
+	;;
 mips*-*-netbsd*)			# NetBSD/mips, either endian.
 	target_cpu_default="MASK_ABICALLS"
 	tm_file="elfos.h ${tm_file} mips/elf.h netbsd.h netbsd-elf.h mips/netbsd.h"
@@ -3866,6 +3903,31 @@
 		done
 		;;
 
+	riscv*-*-*)
+		supported_defaults="abi arch arch_32 arch_64 float tune tune_32 tune_64"
+
+		case ${with_float} in
+		"" | soft | hard)
+			# OK
+			;;
+		*)
+			echo "Unknown floating point type used in --with-float=$with_float" 1>&2
+			exit 1
+			;;
+		esac
+
+		case ${with_abi} in
+		"" | 32 | 64)
+			# OK
+			;;
+		*)
+			echo "Unknown ABI used in --with-abi=$with_abi" 1>&2
+			exit 1
+			;;
+		esac
+
+    ;;
+
 	mips*-*-*)
 		supported_defaults="abi arch arch_32 arch_64 float fpu nan fp_32 odd_spreg_32 tune tune_32 tune_64 divide llsc mips-plt synci"
 
diff -N -r -u original-gcc/gcc/configure original-gcc2/gcc/configure
--- original-gcc/gcc/configure	2015-11-19 13:32:10.000000000 +0000
+++ original-gcc2/gcc/configure	2016-03-22 13:58:54.599367774 +0000
@@ -23717,6 +23717,25 @@
 	tls_first_minor=14
 	tls_as_opt="-a32 --fatal-warnings"
 	;;
+  riscv*-*-*)
+    conftest_s='
+	.section .tdata,"awT",@progbits
+x:
+	.word 2
+	.text
+	la.tls.gd a0,x
+	la.tls.ie a1,x
+	lui a0,%tls_ie_pcrel_hi(x)
+	lw a0,%pcrel_lo(x)(a0)
+	add a0,a0,tp
+	lw a0,0(a0)
+	lui a0,%tprel_hi(x)
+	add a0,a0,tp,%tprel_add(x)
+	lw a0,%tprel_lo(x)(a0)'
+	tls_first_major=2
+	tls_first_minor=21
+	tls_as_opt='-m32 --fatal-warnings'
+	;;
   s390-*-*)
     conftest_s='
 	.section ".tdata","awT",@progbits
diff -N -r -u original-gcc/gcc/configure.ac original-gcc2/gcc/configure.ac
--- original-gcc/gcc/configure.ac	2015-11-19 13:32:10.000000000 +0000
+++ original-gcc2/gcc/configure.ac	2016-03-22 13:58:54.601367857 +0000
@@ -3263,6 +3263,25 @@
 	tls_first_minor=14
 	tls_as_opt="-a32 --fatal-warnings"
 	;;
+  riscv*-*-*)
+    conftest_s='
+	.section .tdata,"awT",@progbits
+x:
+	.word 2
+	.text
+	la.tls.gd a0,x
+	la.tls.ie a1,x
+	lui a0,%tls_ie_pcrel_hi(x)
+	lw a0,%pcrel_lo(x)(a0)
+	add a0,a0,tp
+	lw a0,0(a0)
+	lui a0,%tprel_hi(x)
+	add a0,a0,tp,%tprel_add(x)
+	lw a0,%tprel_lo(x)(a0)'
+	tls_first_major=2
+	tls_first_minor=21
+	tls_as_opt='-m32 --fatal-warnings'
+	;;
   s390-*-*)
     conftest_s='
 	.section ".tdata","awT",@progbits
diff -N -r -u original-gcc/gcc/testsuite/gcc.c-torture/execute/20101011-1.c original-gcc2/gcc/testsuite/gcc.c-torture/execute/20101011-1.c
--- original-gcc/gcc/testsuite/gcc.c-torture/execute/20101011-1.c	2014-11-10 16:30:33.000000000 +0000
+++ original-gcc2/gcc/testsuite/gcc.c-torture/execute/20101011-1.c	2016-03-22 13:58:54.603368006 +0000
@@ -6,6 +6,9 @@
 #elif defined (__powerpc__) || defined (__PPC__) || defined (__ppc__) || defined (__POWERPC__) || defined (__ppc)
   /* On PPC division by zero does not trap.  */
 # define DO_TEST 0
+#elif defined (__riscv__)
+  /* On RISC-V division by zero does not trap.  */
+# define DO_TEST 0
 #elif defined (__SPU__)
   /* On SPU division by zero does not trap.  */
 # define DO_TEST 0
diff -N -r -u original-gcc/gcc/testsuite/gcc.dg/20020312-2.c original-gcc2/gcc/testsuite/gcc.dg/20020312-2.c
--- original-gcc/gcc/testsuite/gcc.dg/20020312-2.c	2015-01-06 08:50:12.000000000 +0000
+++ original-gcc2/gcc/testsuite/gcc.dg/20020312-2.c	2016-03-22 13:58:54.605367701 +0000
@@ -66,6 +66,8 @@
 # else
 #  define PIC_REG  "30"
 # endif
+#elif defined(__riscv__)
+/* No pic register.  */
 #elif defined(__RX__)
 /* No pic register.  */
 #elif defined(__s390__)
--- original-gcc/gcc/testsuite/gcc.dg/stack-usage-1.c
+++ gcc/gcc/testsuite/gcc.dg/stack-usage-1.c
@@ -61,6 +61,8 @@
 #  else
 #    define SIZE 240
 #  endif
+#elif defined (__riscv__)
+#  define SIZE 240
 #elif defined (__AVR__)
 #  define SIZE 254
 #elif defined (__s390x__)
diff -N -r -u original-gcc/libatomic/configure.tgt original-gcc2/libatomic/configure.tgt
--- original-gcc/libatomic/configure.tgt	2015-01-09 14:06:02.000000000 +0000
+++ original-gcc2/libatomic/configure.tgt	2016-03-22 13:58:54.608367835 +0000
@@ -33,6 +33,7 @@
 	ARCH=alpha
 	;;
   rs6000 | powerpc*)	ARCH=powerpc ;;
+  riscv*)		ARCH=riscv ;;
   sh*)			ARCH=sh ;;
 
   arm*)
diff -N -r -u original-gcc/libgcc/config.host original-gcc2/libgcc/config.host
--- original-gcc/libgcc/config.host	2015-10-01 12:01:18.000000000 +0000
+++ original-gcc2/libgcc/config.host	2016-03-22 14:02:56.966351088 +0000
@@ -167,6 +167,9 @@
 	;;
 rs6000*-*-*)
 	;;
+riscv*)
+	cpu_type=riscv
+	;;
 sparc64*-*-*)
 	cpu_type=sparc
 	;;
@@ -1064,6 +1067,18 @@
 	tmake_file="${tmake_file} rs6000/t-ppccomm rs6000/t-crtstuff t-crtstuff-pic t-fdpbit"
 	extra_parts="$extra_parts crtbegin.o crtend.o crtbeginS.o crtendS.o crtbeginT.o ecrti.o ecrtn.o ncrti.o ncrtn.o"
 	;;
+riscv*-*-linux*)
+	tmake_file="${tmake_file} riscv/t-fpbit riscv/t-dpbit riscv/t-tpbit riscv/t-elf riscv/t-elf${host_address}"
+	extra_parts="$extra_parts crtbegin.o crtend.o crti.o crtn.o crtendS.o crtbeginT.o"
+	;;
+riscv*-*-freebsd*)
+	tmake_file="${tmake_file} riscv/t-fpbit riscv/t-dpbit riscv/t-tpbit riscv/t-elf"
+	extra_parts="$extra_parts crtbegin.o crtend.o crti.o crtn.o crtendS.o crtbeginT.o"
+	;;
+riscv*-*-*)
+	tmake_file="${tmake_file} riscv/t-fpbit riscv/t-dpbit riscv/t-elf riscv/t-elf${host_address}"
+	extra_parts="$extra_parts crtbegin.o crtend.o crti.o crtn.o"
+	;;
 rs6000-ibm-aix4.[3456789]* | powerpc-ibm-aix4.[3456789]*)
 	md_unwind_header=rs6000/aix-unwind.h
 	tmake_file="t-fdpbit rs6000/t-ppc64-fp rs6000/t-slibgcc-aix rs6000/t-ibm-ldouble"
--- original-gcc/libsanitizer/sanitizer_common/sanitizer_linux.cc
+++ gcc/libsanitizer/sanitizer_common/sanitizer_linux.cc
@@ -213,6 +213,11 @@ void GetPcSpBp(void *context, uptr *pc,
   *pc = ucontext->uc_mcontext.gregs[31];
   *bp = ucontext->uc_mcontext.gregs[30];
   *sp = ucontext->uc_mcontext.gregs[29];
+# elif defined(__riscv__)
+  ucontext_t *ucontext = (ucontext_t*)context;
+  *pc = ucontext->uc_mcontext.gregs[REG_PC];
+  *bp = ucontext->uc_mcontext.gregs[REG_S0];
+  *sp = ucontext->uc_mcontext.gregs[REG_SP];
 #else
 # error "Unsupported arch"
 #endif
diff -N -r -u original-gcc/libsanitizer/sanitizer_common/sanitizer_platform.h original-gcc2/libsanitizer/sanitizer_common/sanitizer_platform.h
--- original-gcc/libsanitizer/sanitizer_common/sanitizer_platform.h	2015-05-12 07:02:09.000000000 +0000
+++ original-gcc2/libsanitizer/sanitizer_common/sanitizer_platform.h	2016-03-22 13:58:54.610368326 +0000
@@ -98,9 +98,9 @@
 
 // The AArch64 linux port uses the canonical syscall set as mandated by
 // the upstream linux community for all new ports. Other ports may still
-// use legacy syscalls.
+// use legacy syscalls.  The RISC-V port also does this.
 #ifndef SANITIZER_USES_CANONICAL_LINUX_SYSCALLS
-# if defined(__aarch64__) && SANITIZER_LINUX
+# if (defined(__aarch64__) || defined(__riscv__)) && SANITIZER_LINUX
 # define SANITIZER_USES_CANONICAL_LINUX_SYSCALLS 1
 # else
 # define SANITIZER_USES_CANONICAL_LINUX_SYSCALLS 0
diff -N -r -u original-gcc/libsanitizer/sanitizer_common/sanitizer_platform_limits_linux.cc original-gcc2/libsanitizer/sanitizer_common/sanitizer_platform_limits_linux.cc
--- original-gcc/libsanitizer/sanitizer_common/sanitizer_platform_limits_linux.cc	2015-03-09 18:25:28.000000000 +0000
+++ original-gcc2/libsanitizer/sanitizer_common/sanitizer_platform_limits_linux.cc	2016-03-22 13:58:54.609370950 +0000
@@ -61,7 +61,8 @@
 }  // namespace __sanitizer
 
 #if !defined(__powerpc64__) && !defined(__x86_64__) && !defined(__aarch64__)\
-                            && !defined(__mips__) && !defined(__sparc__)
+                            && !defined(__mips__) && !defined(__sparc__)\
+                            && !defined(__riscv__)
 COMPILER_CHECK(struct___old_kernel_stat_sz == sizeof(struct __old_kernel_stat));
 #endif
 
diff -N -r -u original-gcc/libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h original-gcc2/libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h
--- original-gcc/libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h	2015-03-09 18:25:28.000000000 +0000
+++ original-gcc2/libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.h	2016-03-22 13:58:54.611367942 +0000
@@ -72,6 +72,9 @@
   const unsigned struct_kernel_stat_sz = 144;
   #endif
   const unsigned struct_kernel_stat64_sz = 104;
+#elif defined(__riscv__)
+  const unsigned struct_kernel_stat_sz = 128;
+  const unsigned struct_kernel_stat64_sz = 128;
 #elif defined(__sparc__) && defined(__arch64__)
   const unsigned struct___old_kernel_stat_sz = 0;
   const unsigned struct_kernel_stat_sz = 104;
@@ -100,7 +103,7 @@
 
 #if SANITIZER_LINUX || SANITIZER_FREEBSD
 
-#if defined(__powerpc64__)
+#if defined(__powerpc64__) || defined(__riscv__)
   const unsigned struct___old_kernel_stat_sz = 0;
 #elif !defined(__sparc__)
   const unsigned struct___old_kernel_stat_sz = 32;
